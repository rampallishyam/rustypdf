name: Build and Publish Wheels

on:
  push:
    tags:
      - 'v*.*.*'
    branches:
      - main
  workflow_dispatch:
    inputs:
      publish:
        description: "Publish to PyPI (true/false)"
        required: false
        default: "false"

jobs:
  build:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - uses: PyO3/maturin-action@v1
        with:
          maturin-version: "1.5.1"
          command: build --release --out dist --interpreter python3.12
      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: dist/*.whl

  publish:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/main' || (github.event_name == 'workflow_dispatch' && github.event.inputs.publish == 'true')
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          path: dist
          merge-multiple: true
      - name: Install twine
        run: pip install twine
      - name: Check wheel metadata
        run: |
          echo "Listing files in dist directory:"
          ls -la dist/
          echo "Checking wheel metadata with twine:"
          python -m twine check dist/*.whl
          echo "Examining wheel content:"
          for wheel in dist/*.whl; do
            echo "Contents of $wheel:"
            python -m zipfile -l $wheel | grep -i meta
          done
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1.8.2
        with:
          packages-dir: dist/
          skip-existing: false
          verbose: true
          print-hash: true
          password: ${{ secrets.PYPI_API_TOKEN }}
